name: Deploy with Monitoring

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Run tests (if available)
      run: npm test --if-present

    - name: Deploy to AWS Amplify
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deployment triggered by commit: ${{ github.sha }}"
        echo "Deployment will be handled by AWS Amplify webhook"

    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deer-river-deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  health-check:
    runs-on: ubuntu-latest
    needs: test-and-deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Wait for deployment
      run: sleep 300  # Wait 5 minutes for deployment

    - name: Health check
      run: |
        curl -f ${{ secrets.AMPLIFY_URL }}/api/health || exit 1

    - name: Test CSV import endpoint
      run: |
        curl -f ${{ secrets.AMPLIFY_URL }}/api/test-db || exit 1

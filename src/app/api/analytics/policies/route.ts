import { NextResponse } from 'next/server'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

export async function GET() {
  try {
    const policies = await prisma.seedingPolicy.findMany({
      include: {
        sourceCohort: {
          select: { name: true }
        },
        targetCohort: {
          select: { name: true }
        }
      }
    })

    const policyStats = await Promise.all(
      policies.map(async (policy) => {
        // Count relationships generated by this policy
        const relationshipsGenerated = await prisma.personRelation.count({
          where: {
            provenance: 'SEEDED',
            sourceRef: {
              path: ['policyId'],
              equals: policy.id
            }
          }
        })

        return {
          id: policy.id,
          name: policy.name,
          domain: policy.domain,
          probability: policy.probability,
          isActive: policy.isActive,
          relationshipsGenerated
        }
      })
    )

    return NextResponse.json(policyStats)

  } catch (error) {
    console.error('‚ùå Failed to fetch policy analytics:', error)
    return NextResponse.json(
      { error: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    )
  }
}
